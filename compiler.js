// Generated by IcedCoffeeScript 1.8.0-d
(function() {
  var compile, prepare, quote, render, _tag, _text,
    __slice = [].slice;

  exports.quote = quote = function(s) {
    s = s.replace(/([\\'])/g, '\\$1').replace(/\n/g, '\\n').replace(/\r/g, '\\r');
    return "'" + s + "'";
  };

  exports.compile = compile = function(src, opts) {
    var p, pp;
    if (opts == null) {
      opts = {};
    }
    pp = (function() {
      var _i, _len, _ref, _results;
      _ref = src.split(/\n\s*\n/);
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        p = _ref[_i];
        if (!/\S/.test(p)) {
          continue;
        }
        _results.push("_tag('p', {}, _text(" + (quote(p)) + "))");
      }
      return _results;
    })();
    return "return [" + (pp.join(', ')) + "];";
  };

  exports._tag = _tag = function() {
    var attrs, child, children, k, name, result, v, _i, _len;
    name = arguments[0], attrs = arguments[1], children = 3 <= arguments.length ? __slice.call(arguments, 2) : [];
    if (attrs == null) {
      attrs = {};
    }
    result = document.createElement(name);
    for (k in attrs) {
      v = attrs[k];
      result.setAttribute(k, v);
    }
    for (_i = 0, _len = children.length; _i < _len; _i++) {
      child = children[_i];
      result.appendChild(child);
    }
    return result;
  };

  exports._text = _text = function(text) {
    return document.createTextNode(text);
  };

  exports.prepare = prepare = function(src, opts) {
    return new Function('_tag', '_text', compile(src, opts)).bind(null, _tag, _text);
  };

  exports.render = render = function(src, opts) {
    return prepare(src, opts)();
  };

}).call(this);
